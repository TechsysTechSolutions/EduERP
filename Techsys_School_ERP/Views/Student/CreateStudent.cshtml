@model Techsys_School_ERP.Model.Student

@{
    
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}


<!DOCTYPE html>

<html>
<head>
	
	<!-- /theme JS files -->
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
	@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@

	<script type="text/javascript" src="~/Scripts/jquery-3.3.1.min.js"></script>
	<script type="text/javascript" src="~/Scripts/jquery-ui.js"></script>

	<!-- /core JS files -->
	<!-- Theme JS files -->
	<script type="text/javascript" src="~/Content/assets/js/core/libraries/jquery_ui/interactions.min.js"></script>
	<script type="text/javascript" src="~/Content/assets/js/plugins/forms/selects/select2.min.js"></script>
	<script type="text/javascript" src="~/Content/assets/js/pages/form_select2.js"></script>
	
	<style>
		article, aside, figure, footer, header, hgroup,
		menu, nav, section {
			display: block;
		}


		.bold {
			font-weight : 700;

		}

		label {

font-weight: 500;

}

		.bootstrap-margin-top {
	margin-top: -5%;
}

		.vert-margin-top {
			margin-top: 1%;
		}
		
	</style>
	<script type="text/javascript">
		$(document).ready(function () {
			var isdropdownValidvalid = true;

			$('#CountriesList').select2({
				minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
				placeholder: "Select Country from List",
				ajax: {
					url: '/Staff/populateCountriesList',
					data: function (params) {
						return {
							sSearchTerm: params.term// search term
						};
					},
					processResults: function (data) {
						return {
							results: data.items
						};
					},
					initSelection: function (element, callback) {
					}
				},
			});

			$(function () {



				$("#datepicker").datepicker({
					required: true,
					message: "This is a required field",
					dateFormat: 'dd-mm-yy'
				});

				$("#DOB").datepicker({
					required: true,
					message: "This is a required field",
					dateFormat: 'dd-mm-yy'
				});
			});
			

			$("#blah1").click(function () {
				$("#file1").attr("visibility", "visible");
				$("input[type=file]").trigger('click');
				$("input[type=file]").trigger("change");
			});

			$("#btncancel").click(function () {		
			});



			$("#btnSaveAndContinue").click(function () {
				//debugger
				var isValid = true;
				
				isValid = dropdownSelectValidation(isValid);
				var Student =
					{
						First_Name: $("#First_Name").val(),
						Last_Name: $("#Last_Name").val(),
						Middle_Name: $("#Middle_Name").val(),
						Gender_Id: $("#GenderList").find(":selected").val(),
						DOB: $("#DOB").val(),
						Enrollment_Date: $("#datepicker").val(),
						Father_Name: $("#Father_Name").val(),
						Mother_Name: $("#Mother_Name").val(),
						Blood_Group_Id: $("#BloodGroupList").find(":selected").val(),
						Address_Line1: $("#Address_Line1").val(),
						Address_Line2: $("#Address_Line2").val(),
						City_Id: $("#City_Id").find(":selected").val(),
						State_Id: $("#State_Id").find(":selected").val(),
						Country_Id: $("#CountriesList").find(":selected").val(),
						Phone_No1: $("#Phone_No1").val(),
						Phone_No2: $("#Phone_No2").val(),
						LandLine: $("#LandLine").val(),
						Email_Id: $("#Email_Id").val(),
						Academic_Year: $("#Academic_Year").val(),
						Pincode: $("#Pincode").val(),
						Photo: ($("#Photo").get(0).files)[0],
						Aadhar_No: $("#Aadhar_No").val(),
						Class_Id: $("#ClassList").find(":selected").val(),
						Section_Id: $('#Section_Id').find(":selected").val(),
						Roll_No: $("#Roll_No").val(),
						Is_HostelStudent: $("#chkIsHostelStudent").val(),
						School_Bus_Availed: $("#chkIfSchoolBusAvailed").val(),
						Hostel_Room_Id: $("#Hostel_Room_Id").val(),
						Vehicle_Id: $("#VehicleList").val(),
						PAN_No : $("#PAN_No").val()
					};


				
				$('input[type="text" ]').each(function () {
				//$('input').each(function () {
						if ($.trim($(this).val()) == '') {
							//debugger
							isValid = false;
							$(this).css({
								"border": "1px solid red",
								"background": "#FFCECE"
							});
						}
						else {
							$(this).css({
								"border": "1px solid #ddd",
								"background": "white"
							});
						}
					
						
					});

				if (isValid == false ) {
					//debugger
					e.preventDefault();
				}
				
				else {

					$.ajax({
						type: "POST",
						url: "/Student/CreateStudent/",
						data: JSON.stringify(Student),
						contentType: "application/json; charset=utf-8",
						dataType: "json",
						success: function (response) {
							//debugger
							if (response == "SuccessFully Added") {
								var data = new FormData();
								data.append('file', ($("#Photo").get(0).files)[0]);
								data.append('student_Id', ($("#Student_Id").val()));

								$.ajax({

									url: "/Student/Upload",
									type: "POST",
									data: data,
									cache: false,
									processData: false,
									contentType: false,
									success: function (data) {
										alert('Student Successfully Added');
										window.location.href = "/Student/CreateStudentOtherDetails";
									},
									error: function (ex) {
										alert('Failed to retrieve records.' + ex);
									}
								});
							}
							else if (response == "Email Already Exists") {
								alert("Email Already Exists.Please try another email Id");
							}
							else if (response == "Error"){
								alert("Error in Saving Details.Please try again.");
						}
					else
							{
								alert(response);

					}


						}

					});
				}
				
				

			
			
				
			});


			function PopulateHostelRoomList() {


				$('#Hostel_Room_Id').select2({
					minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
					placeholder: "Select Hostel Room from List",
					ajax: {
						url: '/Student/populateHostelRoomList',
						data: function (params) {
							return {
								sSearchTerm: params.term// search term
							};
						},
						processResults: function (data) {
							debugger
							return {
								//results: data.items
								results: data
							};
						},
						initSelection: function (element, callback) {
						}
					},
				});
			}
			$("#chkIsHostelStudent").change(function () {
				if ($(this).prop('checked') == true) {
					//do something
					$('#Hostel_Room_Id').attr('disabled', false)
					PopulateHostelRoomList();
				
					
				}
				else {

					$('#Hostel_Room_Id').val('').trigger('change');
					$('#Hostel_Room_Id').attr('disabled', true);
					//PopulateHostelRoomList();
				}
			});

			function PopulateVehicleList() {

				$('#VehicleList').select2({
					minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
					placeholder: "Select Bus from List",
					ajax: {
						url: '/Student/populateVehicleList',
						data: function (params) {
							return {
								sSearchTerm: params.term// search term
							};
						},
						processResults: function (data) {
							debugger
							return {
								//results: data.items
								results: data
							};
						},
						initSelection: function (element, callback) {
						}
					},
				});
			}

			$("#chkIfSchoolBusAvailed").change(function () {
				if ($(this).prop('checked') == true) {
					//do something
					$('#VehicleList').attr('disabled', false)
					PopulateVehicleList();


				}
				else {

					$('#VehicleList').val('').trigger('change');
					$('#VehicleList').attr('disabled', true);
					//PopulateVehicleList();
				}
			});

			//var isValid = true;
			$('input[type="text"]').on('input', function () {

				if ($.trim($(this).val()) == '') {
					isValid = false;
					$(this).css({
						"border": "1px solid red",
						"background": "#FFCECE"
					});
				}
				else {
					$(this).css({
						"border": "1px solid #ddd",
						"background": "white"
					});
				}
			});

			$('input[type="datetime"]').on('input', function () {

				if ($.trim($(this).val()) == '') {
					isValid = false;
					$(this).css({
						"border": "1px solid red",
						"background": "#FFCECE"
					});
				}
				else {
					$(this).css({
						"border": "1px solid #ddd",
						"background": "white"
					});
				}
			});

			$("input[type=file]").change(function () {

				if ($(this)[0].files && $(this)[0].files[0]) {
					var reader = new FileReader();

					reader.onload = function (e) {
						$('#blah1')
							.attr('src', e.target.result)
							.width(100)
							.height(80);
					};

					reader.readAsDataURL($(this)[0].files[0]);

				}
			});


			function dropdownSelectValidation(valid) {

		//		debugger;

				var isValid = valid;

				if ($("#ClassList").val() == 0) {
				   isValid = false;
					alert("Please Select the Class");
				}

				else if ($('#Section_Id').val() == 0) {
					isValid = false;
					alert("Please Select the Section");
				}

				else if ($("#GenderList").val() == 0) {
					isValid = false;
					alert("Please Select the Gender");
				}

				else if ($("#BloodGroupList").val() == 0) {
					isValid = false;
					alert("Please Select the Blood Group");
				}

				else if ($("#City_Id").val() == 0) {
					isValid = false;
					alert("Please Select the City");
				}
				else if ($("#CountriesList").val() == 0) {
					isValid = false;
					alert("Please Select the Country");
				}

				else if  ($("#State_Id").val() == 0) {
					isValid = false;
					alert("Please Select the Country");

				}

				return isValid;
			}


		$("#ClassList").change(function () {
				if ($("#ClassList").val() == 0) {
					alert("Please Select the Class")

				}
				else {
					getSectionForClass($("#ClassList").val())
				}
			});

			function getSectionForClass(Class_Id) {
				
				$.ajax({
					url: '/Student/FetchSectionIDForClass/',
					data: "{'Class_Id':'" + $("#ClassList").val() + "'}",
					dataType: "json",
					type: "POST",
					contentType: "application/json; charset=utf-8",
					async: true,
					processData: false,
					cache: false,
					success: function (data) {
						//debugger
						// first remove the current options if any
						$('#Section_Id').find('option').remove();

						$('#Section_Id').append($('<option></option>').val(0).html("-- Select Section --"));
						for (var i = 0; i < data.length; i++) {
							//debugger
							//$('#SectionList').append($('<option></option>').val(data[i].Id).html(data[i].Name))

							var opt = new Option(data[i].Name, data[i].Id);
							$('#Section_Id').append(opt);

						}

				}

				});
			}

			$("#CountriesList").change(function () {
				if ($("#CountriesList").val() == 0) {
					alert("Please Select the Country")

				}
				else {
					getStatesForCountry($("#CountriesList").val())
				}
			});

			function getStatesForCountry(Country_Id) {

				$.ajax({
					url: '/Staff/FetchStateForCountry/',
					data: "{'Country_Id':'" + $("#CountriesList").val() + "'}",
					dataType: "json",
					type: "POST",
					contentType: "application/json; charset=utf-8",
					async: true,
					processData: false,
					cache: false,
					success: function (data) {
						
						// first remove the current options if any
						$('#State_Id').find('option').remove();

						$('#State_Id').append($('<option></option>').val(0).html("-- Select State --"));
						for (var i = 0; i < data.length; i++) {
						
							//$('#SectionList').append($('<option></option>').val(data[i].Id).html(data[i].Name))

							var opt = new Option(data[i].Name, data[i].Id);
							$('#State_Id').append(opt);
							$('#State_Id').append("<div style=\"margin-top:4px;display:none;\"></div>");
							

						}

					}

				});
			}

			$("#State_Id").change(function () {
				if ($("#State_Id").val() == 0) {
					alert("Please Select the State")

				}
				else {
					getCitiesForState($("#State_Id").val())
				}
			});


			function getCitiesForState(State_Id) {

				$.ajax({
					url: '/Staff/FetchCitiesForState/',
					data: "{'State_Id':'" + $("#State_Id").val() + "'}",
					dataType: "json",
					type: "POST",
					contentType: "application/json; charset=utf-8",
					async: true,
					processData: false,
					cache: false,
					success: function (data) {

						// first remove the current options if any
						$('#City_Id').find('option').remove();

						$('#City_Id').append($('<option></option>').val(0).html("-- Select City --"));
						for (var i = 0; i < data.length; i++) {

							//$('#SectionList').append($('<option></option>').val(data[i].Id).html(data[i].Name))

							var opt = new Option(data[i].Name, data[i].Id);
							$('#City_Id').append(opt);

						}

					}

				});
			}
		});
	
	</script>

</head>
<body>
	@*<section class="content">*@
		@*<div class="content">*@
		<div class="page-container" style="height:100%;">
			<div class="page-content">
				<div class="container">
					@*<div class="row">*@

						<div class="panel panel-primary panel-bordered" style="width:100%;">
							<div class="panel-heading bg-indigo-400">
								<h6 class="panel-title ">STUDENT DETAIL</h6>
								<div class="heading-elements ">
									<ul class="icons-list">
										<li><a data-action="collapse"></a></li>
										<li><a data-action="reload"></a></li>
										<li><a data-action="close"></a></li>
									</ul>
								</div>
							</div>
							<div class="panel-body">
								<fieldset>
									<legend class="text-semibold" style="font-weight:900;">
										<i class="icon-reading position-left" style="color:green;font-size:larger;font-weight:bolder; "></i>
										Add personal details
									</legend>
									<div class="row">

										<div class="row form-group">

											<div class="col-sm-2 col-md-2 ">
												@Html.LabelFor(model => model.Roll_No, new { htmlAttributes = new { @class = "form-control bold" } })

												@Html.EditorFor(model => model.Roll_No, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @readonly = "readonly" } })

												@Html.HiddenFor(model => model.Student_Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @readonly = "readonly" } })

												@Html.ValidationMessageFor(model => model.Roll_No)
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
												@Html.ValidationMessageFor(model => model.First_Name)
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
												@Html.ValidationMessageFor(model => model.Last_Name)
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Middle_Name, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.Middle_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
												@Html.ValidationMessageFor(model => model.Middle_Name)
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Enrollment_Date, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
												@*<p>Date: <input type="text" id="datepicker"></p>*@
												@Html.EditorFor(model => model.Enrollment_Date, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "datepicker" } })
												@Html.ValidationMessageFor(model => model.Enrollment_Date)
												@*@Html.EditorFor(model => model.Enrollment_Date, new { htmlAttributes = new { @class = "form-control date", @placeholder = "" } })*@
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Academic_Year, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.Academic_Year, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
											</div>
											
										</div>

										<div class="row form-group">
											<div class="col-sm-2 col-md-2 ">
												@Html.LabelFor(model => model.Aadhar_No, new { htmlAttributes = new { @class = "form-control bold" } })
												@Html.EditorFor(model => model.Aadhar_No, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @type = "text" } })
												@Html.ValidationMessageFor(model => model.Aadhar_No)
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Class_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												<select id="ClassList" required name="ClassListName" class="form-control">
													@if (ViewBag.classList != null)
										{
														<option value='0'>-- Select Class --</option>
											foreach (var item in ViewBag.classList)
											{
												if (item.Text != null)
												{

																<option value="@item.Value">
																	@item.Text
																</option>

												}

											}
										}
												</select>
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Section_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												<select id="Section_Id" required name="SectionName" class="form-control"></select>
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Gender_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												<select id="GenderList" required name="GenderListName" class="form-control">
													@if (ViewBag.genderList != null)
										{
														<option value='0'>-- Select Gender --</option>
											foreach (var item in ViewBag.genderList)
											{
												if (item.Text != null)
												{

																<option value="@item.Value">
																	@item.Text
																</option>

												}

											}
										}
												</select>
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
												@Html.ValidationMessageFor(model => model.DOB)
											</div>
											<div class="col-sm-2 col-md-2">

												<img id="blah1" src="~/Content/images/imageupload_-_Copy.png" alt="your image" style="height:80px;width:100px;margin-top:0%;margin-left:18%;background-size:auto; align-content:center; " class="img-responsive">
												<input type="file" name="Photo" style="display:none;  " id="Photo" />
											</div>
											
										</div>

										<div class="row form-group" style="margin-top:-10px;">
											<div class="col-sm-3 col-md-3">
												@Html.LabelFor(model => model.Father_Name, new { htmlAttributes = new { @class = "form-control bold" } })
												@Html.EditorFor(model => model.Father_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
											</div>
											<div class="col-sm-3 col-md-3">
												@Html.LabelFor(model => model.Mother_Name, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.Mother_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
											</div>

											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Phone_No1, new { htmlAttributes = new { @class = "form-control bold" } })
												@Html.EditorFor(model => model.Phone_No1, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Phone_No2, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												@Html.EditorFor(model => model.Phone_No2, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
											</div>
											<div class="col-sm-2 col-md-2">
												@Html.LabelFor(model => model.Blood_Group_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
												<select id="BloodGroupList" required name="BloodGroupName" class="form-control">
													@if (ViewBag.bloodGroupList != null)
													{
														<option value='0'>-- Select Blood Group --</option>		foreach (var item in ViewBag.bloodGroupList)
														{
															if (item.Text != null)
															{

																<option value="@item.Value">
																	@item.Text
																</option>

															}

														}
													}
												</select>
											</div>

											@*<div class="col-sm-2 col-md-2">
							@Html.LabelFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
							@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
						@Html.ValidationMessageFor(model => model.DOB)
						</div>*@

											@*<div class="col-sm-2 col-md-2">
							@Html.LabelFor(model => model.Academic_Year, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
							@Html.EditorFor(model => model.Academic_Year, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
						</div>*@

										</div>


									</div>
								</fieldset>


								<fieldset>
									<legend class="text-semibold" style="font-weight:900;">
										<i class="icon-reading position-left" style="color:green;"></i>
										Add CONTACT details
									</legend>




									<div class="row form-group">
										<div class="col-sm-5 col-md-5">
											@Html.LabelFor(model => model.Address_Line1, new { htmlAttributes = new { @class = "form-control bold", @style = "font-weight:600; " } })
											@Html.EditorFor(model => model.Address_Line1, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
										</div>
										<div class="col-sm-5 col-md-5">
											@Html.LabelFor(model => model.Address_Line2, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											@Html.EditorFor(model => model.Address_Line2, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
										</div>
										<div class="col-sm-2 col-md-2">
											@Html.LabelFor(model => model.Country_Id, new { htmlAttributes = new { @class = "form-control bold" } })
											<select data-placeholder="Select Country" class="select-search col-sm-3 col-md-3" id="CountriesList"></select>
											</div>

										</div>
									<div class="row form-group">
										
										<div class="col-sm-2 col-md-2">
											@Html.LabelFor(model => model.State_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											<select id="State_Id" required name="StateName" class="form-control"></select>
											@*@Html.EditorFor(model => model.State_Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })*@
										</div>

										<div class="col-sm-2 col-md-2">
											@Html.LabelFor(model => model.City_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											<select id="City_Id" required name="StateName" class="form-control"></select>
											@*@Html.EditorFor(model => model.City_Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })*@
										</div>
										<div class="col-sm-2 col-md-2">
											@Html.LabelFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											@Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
										</div>
										<div class="col-sm-3 col-md-3">
											@Html.LabelFor(model => model.LandLine, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											@Html.EditorFor(model => model.LandLine, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
										</div>
										<div class="col-sm-3 col-md-3">
											@Html.LabelFor(model => model.Email_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											@Html.EditorFor(model => model.Email_Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
										</div>
									</div>

									<div class="row form-group">

										<div class="col-sm-2 col-md-2">
									
											@Html.LabelFor(model => model.Is_HostelStudent, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
										
											<br />
											@*<select id="State_Id" required name="StateName" class="form-control"></select>*@
										    @Html.CheckBox("chkIsHostelStudent", new { @class = "form-control" , @style = "margin-left:7px; height:15px; margin-top: 10px;  "})
											@*@Html.EditorFor(model => model.State_Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })*@
										</div>

										<div class="col-sm-2 col-md-2">
											@Html.LabelFor(model => model.Hostel_Room_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											<select id="Hostel_Room_Id" required name="HostelRoomName" class="form-control" disabled="disabled"></select>
											@*@Html.EditorFor(model => model.City_Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })*@
										</div>
										<div class="col-sm-2 col-md-2">
											@Html.LabelFor(model => model.School_Bus_Availed, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
										
											<br />
											@Html.CheckBox("chkIfSchoolBusAvailed" , new { @class = "form-control", @style = "margin-left:7px; height:15px; margin-top: 10px;  " })
											@*@Html.CheckBoxFor(model => model.School_Bus_Availed, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })*@
										</div>
										<div class="col-sm-3 col-md-3">
											@Html.LabelFor(model => model.Vehicle_Id, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											<select id="VehicleList" required name="VehicleName" class="form-control"  disabled="disabled"></select>
										</div>
										<div class="col-sm-3 col-md-3">
											@Html.LabelFor(model => model.PAN_No, new { htmlAttributes = new { @class = "form-control bold", @placeholder = "" } })
											@Html.EditorFor(model => model.PAN_No, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
										</div>
									</div>

								</fieldset>
							</div>

								<fieldset>
									


									<div class="row col-sm-offset-9 col-md-offset-9 col-sm-3 col-md-3 form-group">
										@*<input type="button" id="btncancel" class="btn btn-primary bg-green-400" style="width:25%;margin-left:30.5%;" value="CANCEL"/>
					<input type="button" id="btnSaveAndContinue" class="btn btn-primary bg-green-400" style="width:40%;" value="SAVE & CONTINUE" />*@
										<input type="button" id="btncancel" class="btn btn-primary bg-green-400  col-md-1 col-sm-1 " value="CANCEL" style="width:30%; margin-right:1%;  " />
										<input type="button" id="btnSaveAndContinue" class="btn btn-primary bg-green-400 col-md-2 col-sm-2" value="SAVE & CONTINUE" style="width:60%; "/>

									</div>


								</fieldset>
							</div>

					@*</div>*@
				</div>
			</div>
			</div>


@*</section>*@
		
</body>
</html>